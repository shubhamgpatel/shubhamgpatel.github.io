{"version":3,"sources":["./src/app/components/job-post/update-job-post/update-job-post.component.html","./src/app/components/jobApplication/update-job-application/update-job-application.component.html","./src/app/components/job-post/update-job-post/update-job-post.component.css","./src/app/components/job-post/update-job-post/update-job-post.component.ts","./src/app/components/jobApplication/update-job-application/update-job-application.component.css","./src/app/components/jobApplication/update-job-application/update-job-application.component.ts","./src/app/layouts/admin-layout/admin-layout.module.ts","./src/app/layouts/admin-layout/admin-layout.routing.ts"],"names":[],"mappings":"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","file":"layouts-admin-layout-admin-layout-module.js","sourcesContent":["export default \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-8\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header card-header-danger\\\">\\r\\n                        <h4 class=\\\"card-title\\\">Edit Job Post</h4>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                    <form [formGroup]=\\\"updateJobPost\\\" (ngSubmit)=\\\"updateForm()\\\">\\r\\n                        <div>\\r\\n                            <mat-form-field>\\r\\n                                <mat-label>Job Post Title:</mat-label>\\r\\n                                <input matNativeControl matInput formControlName=\\\"title\\\" placeholder=\\\"Enter job post title\\\" type=\\\"text\\\">\\r\\n                            </mat-form-field>\\r\\n                        </div>\\r\\n                        <div>\\r\\n                            <mat-form-field>\\r\\n                                <mat-label>Additional Information: </mat-label>\\r\\n                                <input matNativeControl matInput formControlName=\\\"additional_info\\\" placeholder=\\\"Enter additional information\\\" type=\\\"text\\\">\\r\\n                            </mat-form-field>\\r\\n                        </div>\\r\\n                        <div>\\r\\n                            <mat-form-field>\\r\\n                                <mat-label>Position: </mat-label>\\r\\n                                <select formControlName=\\\"position\\\">\\r\\n                                    <option value=\\\"Intern\\\">Intern</option>\\r\\n                                    <option value=\\\"Intermediate\\\">Intermediate</option>\\r\\n                                    <option value=\\\"Senior\\\">Senior</option>\\r\\n                                    <option value=\\\"Associate\\\">Associate</option>\\r\\n                                </select>\\r\\n                            </mat-form-field>\\r\\n                        </div>\\r\\n                        <div>\\r\\n                            <mat-form-field>\\r\\n                                <mat-label>Post Date: </mat-label>\\r\\n                                <input matNativeControl matInput formControlName=\\\"post_date\\\" type=\\\"date\\\">\\r\\n                            </mat-form-field>\\r\\n                        </div>\\r\\n                        <div>\\r\\n                            <mat-form-field>\\r\\n                                <mat-label>Post Expiry: </mat-label>\\r\\n                                <input matNativeControl matInput formControlName=\\\"post_expiry\\\" type=\\\"date\\\">\\r\\n                            </mat-form-field>\\r\\n                        </div>\\r\\n                        <div>\\r\\n                            <mat-form-field>\\r\\n                                <mat-label>Requirement: </mat-label>\\r\\n                                <input matNativeControl matInput formControlName=\\\"requirement\\\" type=\\\"text\\\">\\r\\n                            </mat-form-field>\\r\\n                        </div>\\r\\n                        <div>\\r\\n                            <mat-form-field>\\r\\n                                <mat-label>Job id: </mat-label>\\r\\n                                <input matNativeControl matInput formControlName=\\\"job_id\\\" type=\\\"text\\\">\\r\\n                            </mat-form-field>\\r\\n                        </div>\\r\\n                        <div>\\r\\n                            <mat-form-field>\\r\\n                                <mat-label>Assessment: </mat-label>\\r\\n                                <select formControlName=\\\"assessment_id\\\">\\r\\n                                    <option [ngValue]=\\\"null\\\" disabled>Choose Assessment</option>\\r\\n                                    <option class=\\\"dropdown-item\\\" *ngFor=\\\"let assessment of assessmentData\\\" [value]=\\\"assessment._id\\\"> {{assessment.title}} </option>\\r\\n                                </select>\\r\\n                            </mat-form-field>\\r\\n                        </div>\\r\\n                        <div>\\r\\n                            <mat-form-field>\\r\\n                                <mat-label>Employer:</mat-label>\\r\\n                                <select formControlName=\\\"employer_id\\\">\\r\\n                                    <option [ngValue]=\\\"null\\\" disabled>Choose Employer</option>\\r\\n                                    <option class=\\\"dropdown-item\\\" *ngFor=\\\"let employer of employerData\\\" [value]=\\\"employer._id\\\">{{employer.company_name}}</option>\\r\\n                                </select>\\r\\n                            </mat-form-field>\\r\\n                        </div>\\r\\n                        <button mat-raised-button type=\\\"submit\\\" class=\\\"btn btn-danger pull-right\\\">Update Job Post</button>\\r\\n                        <div class=\\\"clearfix\\\"></div>\\r\\n                    </form>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-8\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header card-header-danger\\\">\\r\\n                        <h4 class=\\\"card-title\\\">Edit Application</h4>\\r\\n                    </div>\\r\\n                    <!-- {{status.length}} -->\\r\\n                        <!-- <div *ngFor=\\\"let sta of status\\\">\\r\\n                          {{ sta }}\\r\\n                        </div> -->\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                    <form [formGroup]=\\\"updateJobApplicationForm\\\" (submit)=\\\"updateForm()\\\">\\r\\n                    \\r\\n                    <!-- <form [([formGroup])]=\\\"updateJobApplicationForm\\\" (submit)=\\\"updateForm(updateJobApplicationForm.value)\\\"> -->\\r\\n                        <!-- <select formControlName=\\\"dropdownStatus\\\" >\\r\\n                            <option value=\\\"\\\" selected disabled>--Select Status--</option>\\r\\n                            <option class=\\\"dropdown-item\\\" *ngFor=\\\"let state of status\\\">{{state}}</option>\\r\\n                        </select> -->\\r\\n                        \\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-md-12\\\">\\r\\n                                Job Post : <input type=\\\"text\\\" value={{appdata?.jobPost_id.title}} disabled>\\r\\n                                <br><br>\\r\\n                                <div>Candidate : <input type=\\\"text\\\" value={{username}} disabled>\\r\\n                                </div><br>\\r\\n                                <div>Application Date : <input type=\\\"text\\\" value={{appdata?.application_date}} disabled>\\r\\n                                </div><br>\\r\\n                                <div>Application Status : \\r\\n                                    <!-- {{appdata?.application_status}} -->\\r\\n                            <input formControlName=\\\"updated_status\\\" id=\\\"newStatus\\\"  placeholder=\\\"{{appdata?.application_status}}\\\" type=\\\"text\\\">\\r\\n                                <br>\\r\\n                                <!-- {{status}} -->\\r\\n                              \\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                            <button mat-raised-button type=\\\"submit\\\" class=\\\"btn btn-danger pull-right\\\">Update Application</button>\\r\\n                            <div class=\\\"clearfix\\\"></div>\\r\\n                    </form>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvam9iLXBvc3QvdXBkYXRlLWpvYi1wb3N0L3VwZGF0ZS1qb2ItcG9zdC5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit, OnDestroy} from '@angular/core';\r\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { JobApplicationService } from 'app/data/jobApplication/jobApplication.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { StorageService } from 'app/providers/storage/storage.service';\r\nimport { JobPostService } from 'app/data/job-post/job-post.service';\r\nimport { AssessmentService } from 'app/data/assessment/assessment.service';\r\nimport { EmployerService } from 'app/data/employer/employer.service';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-update-job-post',\r\n  templateUrl: './update-job-post.component.html',\r\n  styleUrls: ['./update-job-post.component.css'],\r\n})\r\n\r\nexport class UpdateJobPostComponent implements OnInit, OnDestroy\r\n{\r\n  jobPostId = undefined;\r\n  userInfo: any;\r\n  updateJobPostForm: FormGroup;\r\n  jobPostData;\r\n  private sub;\r\n  private assessmentSubscriber: any;\r\n  private assessmentData: any;\r\n  private employerSubscriber: any;\r\n  private employerData: any;\r\n\r\n    constructor(public fb: FormBuilder,\r\n      private jobPostService: JobPostService,\r\n      private assessmentService: AssessmentService,\r\n      private employerService: EmployerService,\r\n      public router: Router,\r\n      private route: ActivatedRoute,\r\n      private storageService: StorageService) \r\n      {\r\n        this.assessmentSubscriber = this.assessmentService.assessmentSubscriber().subscribe((data: any) => {\r\n          this.assessmentData = data ? data.data :undefined;\r\n          console.log(this.jobPostData);\r\n        })\r\n        this.assessmentService.fetchAssessments();\r\n\r\n        this.employerSubscriber = this.employerService.employerSubscriber().subscribe((data: any) => {\r\n          this.employerData = data ? data.data : undefined;\r\n        })\r\n        this.employerService.fetchEmployers();\r\n\r\n        this.userInfo = this.storageService.get('userInfo');\r\n        this.sub = this.route.params.subscribe(params => \r\n          {\r\n            this.jobPostId = params['id'];\r\n            if(this.jobPostId)\r\n            {\r\n              this.jobPostService.fetchJobPost(this.jobPostId).subscribe((response: any) =>\r\n              {\r\n                this.jobPostData = response.data;\r\n                this.updateJobPostForm = this.fb.group(\r\n                {\r\n                  title: new FormControl(this.jobPostData.jobPostDetails.title,{validators: [Validators.required]}),\r\n                  additional_info: new FormControl(this.jobPostData.jobPostDetails.additional_info,{validators: [Validators.required]}),\r\n                  position: new FormControl(this.jobPostData.jobPostDetails.position,{validators: [Validators.required]}),\r\n                  post_date: new FormControl(this.jobPostData.jobPostDetails.post_date,{validators: [Validators.required]}),\r\n                  post_expiry: new FormControl(this.jobPostData.jobPostDetails.post_expiry,{validators: [Validators.required]}),\r\n                  requirement: new FormControl(this.jobPostData.jobPostDetails.requirement,{validators: [Validators.required]}),\r\n                  job_id: new FormControl(this.jobPostData.jobPostDetails.job_id,{validators: [Validators.required]}),\r\n                  assessment_id: new FormControl(this.jobPostData.jobPostDetails.assessment_id,{validators: [Validators.required]}),\r\n                  employer_id: new FormControl(this.jobPostData.jobPostDetails.employer_id,{validators: [Validators.required]})\r\n                })\r\n              })\r\n            }\r\n          });\r\n\r\n          this.updateJobPostForm = this.fb.group({\r\n            title: new FormControl('',{ validators: [Validators.required]}),\r\n            additional_info: new FormControl('',{validators: [Validators.required]}),\r\n            position: new FormControl('',{validators: [Validators.required]}),\r\n            post_date: new FormControl('',{validators: [Validators.required]}),\r\n            post_expiry: new FormControl('',{validators: [Validators.required]}),\r\n            requirement: new FormControl('',{validators: [Validators.required]}),\r\n            job_id: new FormControl('',{validators: [Validators.required]}),\r\n            assessment_id: new FormControl('',{validators: [Validators.required]}),\r\n            employer_id: new FormControl('',{validators: [Validators.required]}),\r\n            role: new FormControl('',{validators:[Validators.required]})\r\n          })\r\n      }\r\n\r\n    ngOnInit(): void{\r\n    }\r\n\r\n    ngOnDestroy(){\r\n      this.sub.unsubscribe();\r\n    }\r\n\r\n    updateForm(){\r\n      this.jobPostService.updateJobPost(this.updateJobPostForm.value,this.jobPostData.jobPostDetails._id).subscribe(response =>{\r\n        console.log(response);\r\n        if(response.status == \"success\"){\r\n          this.router.navigate(['/'+this.userInfo.user.role.toLowerCase()+'/job-posts']);\r\n        }else{\r\n          alert(\"Something went wrong\");\r\n        }\r\n      })\r\n    }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvam9iQXBwbGljYXRpb24vdXBkYXRlLWpvYi1hcHBsaWNhdGlvbi91cGRhdGUtam9iLWFwcGxpY2F0aW9uLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { JobApplicationService } from 'app/data/jobApplication/jobApplication.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { StorageService } from 'app/providers/storage/storage.service';\r\n\r\n@Component({\r\n  selector: 'app-update-job-application',\r\n  templateUrl: './update-job-application.component.html',\r\n  styleUrls: ['./update-job-application.component.css']\r\n})\r\nexport class UpdateJobApplicationComponent implements OnInit {\r\n  private appdata : any;\r\n  jobApplicationSubscriber: any;\r\n  userInfo: any;\r\n  username;\r\n  status : string[];\r\n  updateJobApplicationForm: FormGroup;\r\n\r\n  constructor(public fb: FormBuilder,private jobApplicationService: JobApplicationService,  public router :Router,private route : ActivatedRoute, private storageServive: StorageService) { \r\n    \r\n    this.status = [\"waiting\",\"confirm\",\"rejected\"];\r\n    \r\n\r\n    this.jobApplicationSubscriber = this.jobApplicationService.jobApplicationSubscriber().subscribe((data: any) => {\r\n      this.jobApplicationSubscriber = data ? data.data : undefined;\r\n      \r\n      this.username = this.storageServive.get('userInfo').user.first_name.charAt(0).toUpperCase() + this.storageServive.get('userInfo').user.first_name.slice(1) + \" \" + this.storageServive.get('userInfo').user.last_name;\r\n      console.log(this.userInfo);\r\n\r\n    })\r\n   }\r\n  ngOnInit(): void\r\n   {\r\n      this.updateJobApplicationForm = this.fb.group({\r\n        updated_status: [''],\r\n      })\r\n      const id = this.route.snapshot.paramMap.get('id');\r\n      this.jobApplicationService.getApplication(id).subscribe((data:any) =>{\r\n        this.appdata = data ? data.data : undefined;\r\n      });\r\n    \r\n    }\r\n\r\n    updateForm() {\r\n      //when the form is submitted\r\n      //this method will be invoked\r\n      //update will change only status\r\n      // let check = document.getElementById(\"newStatus\").value;\r\n      // let check = document.getElementById(\"newStatus\").value;\r\n      let check = this.updateJobApplicationForm.value.updated_status;\r\n      console.log(\"JS Check\" + check);\r\n      console.log(this.updateJobApplicationForm.value);\r\n      this.updateJobApplicationForm.value._id = this.route.snapshot.paramMap.get('id');\r\n      this.updateJobApplicationForm.value.application_status = check;\r\n      console.log(this.updateJobApplicationForm.value);\r\n      // alert(this.updateJobApplicationForm.value.application_status);\r\n      this.jobApplicationService.updateJobApplication(this.updateJobApplicationForm.value).subscribe(jobApplication => {\r\n     this.router.navigate(['/'+this.userInfo.user.role.toLowerCase()+'/my-applications'])\r\n     });\r\n     this.router.navigate(['/'+this.userInfo.user.role.toLowerCase()+'/my-applications'])\r\n\r\n    }\r\n    ngOnDestroy(){\r\n      // this.jobSubscriber.unsubscribe();\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AdminLayoutRoutes } from './admin-layout.routing';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatInputModule} from '@angular/material/input'; \r\nimport {MatRippleModule} from '@angular/material/core';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ProvidersList } from './providers-list';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(AdminLayoutRoutes),\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule\r\n  ],\r\n  declarations: [],\r\n  providers: ProvidersList\r\n})\r\n\r\nexport class AdminLayoutModule {}\r\n","import { Routes } from '@angular/router';\r\n\r\nimport { DashboardComponent } from '../../components/dashboard/dashboard.component';\r\nimport { UserProfileComponent } from '../../components/user-profile/user-profile.component';\r\nimport { TableListComponent } from '../../components/table-list/table-list.component';\r\nimport { TypographyComponent } from '../../components/typography/typography.component';\r\nimport { IconsComponent } from '../../components/icons/icons.component';\r\nimport { MapsComponent } from '../../components/maps/maps.component';\r\nimport { NotificationsComponent } from '../../components/notifications/notifications.component';\r\nimport { UpgradeComponent } from '../../components/upgrade/upgrade.component';\r\nimport { AssessmentComponent } from '../../components/assessment/assessment.component';\r\nimport { UsersComponent } from 'app/components/users/users.component';\r\nimport { JobApplicationComponent } from 'app/components/jobApplication/jobApplication.component';\r\nimport { AddJobApplicationComponent } from 'app/components/jobApplication/add-job-application/add-job-application.component';\r\nimport { UpdateJobApplicationComponent } from 'app/components/jobApplication/update-job-application/update-job-application.component';\r\nimport { MyApplicationsComponent } from 'app/components/jobApplication/my-applications/my-applications.component';\r\nimport { AllApplicationsComponent } from 'app/components/jobApplication/all-applications/all-applications.component';\r\nimport { EmployerComponent } from 'app/components/employer/employer.component';\r\nimport { JobPostComponent } from 'app/components/job-post/job-post.component';\r\nimport { AddJobPostComponent } from 'app/components/job-post/add-job-post/add-job-post.component';\r\nimport { AddassessmentComponent } from 'app/components/assessment/addassessment/addassessment.component';\r\nimport { ViewassessmentComponent } from 'app/components/assessment/viewassessment/viewassessment.component';\r\nimport { UpdateassessmentComponent } from 'app/components/assessment/updateassessment/updateassessment.component';\r\nimport { EmployerProfileComponent } from 'app/components/employer/employer-profile/employer-profile.component';\r\nimport { UpdateJobPostComponent } from 'app/components/job-post/update-job-post/update-job-post.component';\r\nimport { CandidateProfileComponent } from 'app/components/candidate/candidate-profile/candidate-profile.component';\r\nimport { CandidateComponent } from 'app/components/candidate/candidate.component';\r\nimport { ReviewassessmentComponent } from 'app/components/assessment/reviewassessment/reviewassessment.component';\r\n\r\n\r\n\r\nexport const AdminLayoutRoutes: Routes = [\r\n    // {\r\n    //   path: '',\r\n    //   children: [ {\r\n    //     path: 'dashboard',\r\n    //     component: DashboardComponent\r\n    // }]}, {\r\n    // path: '',\r\n    // children: [ {\r\n    //   path: 'userprofile',\r\n    //   component: UserProfileComponent\r\n    // }]\r\n    // }, {\r\n    //   path: '',\r\n    //   children: [ {\r\n    //     path: 'icons',\r\n    //     component: IconsComponent\r\n    //     }]\r\n    // }, {\r\n    //     path: '',\r\n    //     children: [ {\r\n    //         path: 'notifications',\r\n    //         component: NotificationsComponent\r\n    //     }]\r\n    // }, {\r\n    //     path: '',\r\n    //     children: [ {\r\n    //         path: 'maps',\r\n    //         component: MapsComponent\r\n    //     }]\r\n    // }, {\r\n    //     path: '',\r\n    //     children: [ {\r\n    //         path: 'typography',\r\n    //         component: TypographyComponent\r\n    //     }]\r\n    // }, {\r\n    //     path: '',\r\n    //     children: [ {\r\n    //         path: 'upgrade',\r\n    //         component: UpgradeComponent\r\n    //     }]\r\n    // }\r\n    {\r\n        path: '',\r\n        redirectTo: 'users',\r\n        pathMatch: 'full',\r\n    },\r\n    // { path: 'dashboard',    component: DashboardComponent },\r\n    { path: 'assessment', component: AssessmentComponent },\r\n    { path: 'jobApplication', component: JobApplicationComponent },\r\n    { path: 'addjobApplication/:id', component: AddJobApplicationComponent },\r\n    { path: 'updateJobApplication/:id',  component: UpdateJobApplicationComponent},\r\n    { path: 'my-applications',  component: MyApplicationsComponent},\r\n    { path: 'allApplications',  component: AllApplicationsComponent},\r\n    { path: 'addassessment', component: AddassessmentComponent, pathMatch: 'full' },\r\n    { path: 'updateassessment', component: UpdateassessmentComponent },\r\n    { path: 'reviewassessment/:id', component: ReviewassessmentComponent },\r\n    { path: 'viewassessment/:id', component: ViewassessmentComponent },\r\n    { path: 'updateassessment/:id', component: UpdateassessmentComponent },\r\n    { path: 'employer-profile/:id', component: EmployerProfileComponent },\r\n    { path: 'candidate-profile/:id', component: CandidateProfileComponent },\r\n    { path: 'users', component: UsersComponent },\r\n    { path: 'employers', component: EmployerComponent },\r\n    { path: 'candidates', component: CandidateComponent },\r\n    { path: 'job-posts', component: JobPostComponent },\r\n    { path: 'add-job-post', component: AddJobPostComponent },\r\n    { path: 'user-profile', component: UserProfileComponent },\r\n    { path: 'table-list', component: TableListComponent },\r\n    { path: 'typography', component: TypographyComponent },\r\n    { path: 'icons', component: IconsComponent },\r\n    { path: 'maps', component: MapsComponent },\r\n    { path: 'notifications', component: NotificationsComponent },\r\n    { path: 'upgrade', component: UpgradeComponent },\r\n    { path: 'update-job-post/:id', component: UpdateJobPostComponent}\r\n];\r\n"],"sourceRoot":"webpack:///"}